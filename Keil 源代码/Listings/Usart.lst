C51 COMPILER V9.54   USART                                                                 04/07/2020 16:44:56 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN .\Objects\Usart.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Spring Program Files(x86)\MDK4 and MDK5\C51\BIN\C51.EXE Usart.c OPTIMIZE(8,S
                    -PEED) BROWSE INCDIR(..\Keil 源代码 - 副本) DEBUG OBJECTEXTEND PRINT(.\Listings\Usart.lst) TABS(2) OBJECT(.\Objects\Usart
                    -.obj)

line level    source

   1          
   2          
   3          
   4          #include "Usart.h"
   5          
   6          //串口初始化设置
   7          void Usart_Init(void)
   8          {
   9   1        SCON = 0x50;  //串口工作方式1
  10   1        TMOD = 0x20;    //定时器1工作方式2，8位自动重装初值
  11   1        TH1 = 0xfd;
  12   1        TL1 = 0xfd; //设置初值，使波特率为9600
  13   1        //PCON |= 0x80;//SMOD = 1，保留这句波特率增加一倍为19200
  14   1        
  15   1      //  TH1 = 0xfe;
  16   1      //  TL1 = 0xfe; //保留这两句，覆盖原来的初值，使波特率为28800
  17   1        
  18   1        
  19   1        ES = 1;   //允许串口接收中断
  20   1        TR1 = 1;  //定时器1开始计数，产生波特率时钟
  21   1        EA = 1;//开总中断
  22   1      
  23   1      }
  24          //StopFlag
  25          
  26          
  27          
  28          
  29          //把数据转换成字符串，并指定长度，不足前面补零,超出只取后面指定位数
  30          //不能转换0
  31          //最大只能转换20位
  32          //date:输入的数据 ；  Str_out：输出字符串首地址;  len:指定输出长度
  33          void ChangeString(uchar date,char *Str_out,uchar len)
  34          {
  35   1        uchar i=0;
  36   1        char string[20] = {0};//缓存转化的字符串
  37   1      
  38   1        for(i=0;i<20;i++)
  39   1        {
  40   2          string[i] = '0' + date%10;  //先存储最低位
  41   2          date /=10;
  42   2        }
  43   1      
  44   1        for(i=0;i<len;i++)
  45   1        {
  46   2          *(Str_out+i) = string[len-i-1];
  47   2        }
  48   1      }
  49          //StopFlag
  50          
  51          
  52          
  53          //发送一个数据帧出去
C51 COMPILER V9.54   USART                                                                 04/07/2020 16:44:56 PAGE 2   

  54          void SendTheData(void)
  55          {
  56   1        uchar i;  //发送计数变量
  57   1        char str[17] = {0}; //整个数据帧
  58   1      
  59   1        char str1[5] = "smart"; //起始验证位
  60   1        char str2[2] = {0}; //缓存温度值的字符串
  61   1        char str3[2] = {0}; //缓存湿度值的字符串
  62   1        char str4[2] = {0}; //缓存烟雾浓度值的字符串
  63   1        char str5[2] = {0}; //缓存危险等级
  64   1        char str6[1] = {0}; //危险类型
  65   1        char str7[1] = {0};//消防管道开合状态
  66   1        char str8[2] = "ok";  //结束标志位
  67   1      
  68   1        
  69   1        //将校验标识以及数据转换成字符添加到字符串里面
  70   1        strcpy(str,str1); //添加起始位，5位，用于验证用户   //起始0
  71   1        
  72   1        ChangeString(temperature,str2,2);
  73   1        strncat(str,str2,2);  //在后面拼接温度值            //起始5
  74   1        
  75   1        ChangeString(humidity,str3,2);
  76   1        strncat(str,str3,2);//在后面拼接湿度值              //起始7
  77   1        
  78   1        ChangeString(smoke,str4,2);
  79   1        strncat(str,str4,2);//在后面拼接烟雾浓度值          //起始9
  80   1        
  81   1        ChangeString(DangerLevel,str5,2);
  82   1        strncat(str,str5,2);//拼接危险等级                  //起始11
  83   1        
  84   1        ChangeString(DangerType,str6,1);
  85   1        strncat(str,str6,1);//在后面拼接危险类型            //起始13
  86   1        
  87   1        ChangeString(Motor_State,str7,1);
  88   1        strncat(str,str7,1);//在后面拼接消防管道开合状态    //起始14
  89   1        
  90   1        strcat(str,str8);//在后面拼接消防管道开合角度       //起始15
  91   1      
  92   1        for(i=0;i<17;i++)
  93   1        {
  94   2          SBUF = str[i];
  95   2          while(TI == 0); //等待一个byte发送完成后，TI由硬件置1
  96   2          TI = 0; //清除标志位，准备下一次发送
  97   2      
  98   2        }
  99   1      
 100   1      
 101   1      }
 102          //End of Function
 103          
 104          
 105          
 106          
 107          //接收一个数据帧
 108          uchar receive_buf[20] = {0};
 109          uchar receive_State = 0;
 110            //res_State的最高位为状态位，为1表示正在处理数据，暂不接收数据
 111            //                          为0表示接收空闲，可以接收数据
 112          void UsartReceive() interrupt 4
 113          {
 114   1        uchar receive;
 115   1        
C51 COMPILER V9.54   USART                                                                 04/07/2020 16:44:56 PAGE 3   

 116   1        if(RI)
 117   1        {
 118   2          receive = SBUF; //接收一个字符
 119   2          if((receive_State & 0x80) != 0x80)
 120   2          {
 121   3            if(receive == 'E')
 122   3            {
 123   4              ES = 0;//暂时关串口中断，等待处理完成
 124   4              receive_State |= 0x80;//最高位置1，表示接收完一帧
 125   4            }
 126   3            else
 127   3            {
 128   4              receive_buf[receive_State & 0x7f] = receive;  //缓存一个字节到数组;receive_State的低7位位数组地址
 129   4              receive_State++;//数据统计加1
 130   4            }
 131   3            RI =0;//清中断标志
 132   3          }
 133   2        }
 134   1      }
 135          //End of Function
 136          
 137          
 138          
 139          
 140          
 141          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    628    ----
   CONSTANT SIZE    =     54    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21      60
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
